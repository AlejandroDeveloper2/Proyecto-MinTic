[{"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\pages\\App.js":"3","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\lista-productos.js":"4","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\InsertProducto.js":"5","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\shared\\home.js":"6","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Login.js":"7","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\Productos.js":"8","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\AgregarVentas.js":"9","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\UpdateVentas.js":"10","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\Usuarios\\component\\AgregarUsuarios.js":"11","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\AdminLista_ Products.js":"12","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Header.js":"13","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\ListaVentas.js":"14","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\Usuarios\\component\\ListaUsuarios.js":"15","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\UpdateProd.js":"16","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Alert.js":"17"},{"size":562,"mtime":1633047319528,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1633047319531,"results":"20","hashOfConfig":"19"},{"size":1219,"mtime":1633050179763,"results":"21","hashOfConfig":"19"},{"size":2584,"mtime":1633047319530,"results":"22","hashOfConfig":"19"},{"size":12191,"mtime":1633057795467,"results":"23","hashOfConfig":"19"},{"size":708,"mtime":1633047319532,"results":"24","hashOfConfig":"19"},{"size":4600,"mtime":1633047319525,"results":"25","hashOfConfig":"19"},{"size":548,"mtime":1633047319530,"results":"26","hashOfConfig":"19"},{"size":11231,"mtime":1633113189025,"results":"27","hashOfConfig":"19"},{"size":4546,"mtime":1633047319533,"results":"28","hashOfConfig":"19"},{"size":5867,"mtime":1633047319523,"results":"29","hashOfConfig":"19"},{"size":1298,"mtime":1633112473968,"results":"30","hashOfConfig":"19"},{"size":2427,"mtime":1633047319524,"results":"31","hashOfConfig":"19"},{"size":1538,"mtime":1633114041207,"results":"32","hashOfConfig":"19"},{"size":659,"mtime":1633047319523,"results":"33","hashOfConfig":"19"},{"size":5284,"mtime":1633050214699,"results":"34","hashOfConfig":"19"},{"size":2327,"mtime":1633053136167,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1qogayj",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\index.js",["79"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Lista_Productos from './producto/componente/lista-productos';\r\nconst container=document.getElementById('root');\r\n\r\nReactDOM.render(<App />,container);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["80","81"],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\pages\\App.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\lista-productos.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\InsertProducto.js",["82","83","84","85","86"],"import iconUser from '../../img/icon-user.svg';\r\nimport iconPass from '../../img/icon-password.svg';\r\nimport iconIng from '../../img/icon-btn-ingresar.svg';\r\nimport iconRec from '../../img/icon-btn-recuperar.svg';\r\nimport React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from '../../components/Header';\r\nimport List from './lista-productos';\r\nimport AdminLista_Products from './AdminLista_ Products';\r\nimport Alert from '../../components/Alert';\r\n\r\nconst products = [{\r\n    \"id\": 1,\r\n    \"nombreP\": \"Pantalones\",\r\n    \"cantidad\": 3,\r\n    \"precio\": 15000,\r\n    \"image\":\"https://m.media-amazon.com/images/I/61qMt8YrVtL._AC_UY445_.jpg\"\r\n    \r\n},\r\n{\r\n    \"id\": 2,\r\n    \"nombreP\": \"Camisas\",\r\n    \"cantidad\": 2,\r\n    \"precio\": 10000,\r\n    \"image\":\"https://contents.mediadecathlon.com/p1786958/k$2b0a8a97ea3b1154f2f3734009451fe2/pantalon-de-montana-y-trekking-viaje-de-hombre-forclaz-travel-100-gris.jpg?&f=452x452\"\r\n}];\r\nclass insertProducto extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n           alerta: \"\"\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Nombre\r\n        if (!fields[\"regProductNombre\"]) {\r\n            formIsValid = false;\r\n            errors[\"regProductNombre\"] = \"Campo obligatorio.\";\r\n        }\r\n\r\n        if (typeof fields[\"regProductNombre\"] !== \"undefined\") {\r\n            if (!fields[\"regProductNombre\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regProductNombre\"] = \"Solo letras.\";\r\n            }\r\n        }\r\n        \r\n\r\n        //Precio\r\n        if (!fields[\"regProductPrecio\"]) {\r\n            formIsValid = false;\r\n            errors[\"regProductPrecio\"] = \"Campo obligatorio.\";\r\n        }\r\n\r\n        if (typeof fields[\"regProductPrecio\"] !== \"undefined\") {\r\n            if (!fields[\"regProductPrecio\"].match(/^[0-9]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regProductPrecio\"] = \"Solo números desde 0 en adelante.\";\r\n            }\r\n        }\r\n        //Cantidad\r\n        if (!fields[\"regProductCantidad\"]) {\r\n            formIsValid = false;\r\n            errors[\"regProductCantidad\"] = \"Campo obligatorio.\";\r\n        }\r\n\r\n        if (typeof fields[\"regProductCantidad\"] !== \"undefined\") {\r\n            if (!fields[\"regProductCantidad\"].match(/^[0-9]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regProductCantidad\"] = \"Solo números desde 0 en adelante.\";\r\n            }\r\n        }\r\n\r\n        //Descripcion\r\n        if (!fields[\"regProductDesc\"]) {\r\n            formIsValid = false;\r\n            errors[\"regProductDesc\"] = \"Campo obligatorio.\";\r\n        }\r\n\r\n        if (typeof fields[\"regProductDesc\"] !== \"undefined\") {\r\n            if (!fields[\"regProductDesc\"].match(/^[a-zA-Z0-9 .:,)(-=&%\\n]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regProductDesc\"] = \"Carácteres permitidos: .:,)(-=&%\";\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n\r\n        if (this.handleValidation()) {\r\n            products.push(\r\n                {\r\n                    nombreP: e[\"target\"][0].value,\r\n                    cantidad: e[\"target\"][1].value,\r\n                    precio: e[\"target\"][2].value,\r\n                    descripcion: e[\"target\"][3].value\r\n                }\r\n\r\n            );\r\n            this.setState({alerta: \"success\"});\r\n        }else{\r\n\t        this.setState({alerta: \"danger\"});\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Header />\r\n                </div><br />\r\n                <div className=\"container-sm\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col col-md-7 regProducto-content\">\r\n                            <div className=\"col-sm-auto\">\r\n                                <div className=\"row justify-content-center\">\r\n                                <div className=\"col-sm-auto\">\r\n                                        <h3>Agregar Producto</h3>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <div className=\"col-sm-6\">\r\n                                        {this.state.alerta == \"success\" ? <Alert tipo=\"success\" mensaje=\"Producto agregado correctamente\"/>: \"\"}\r\n                                        {this.state.alerta == \"danger\" ? <Alert tipo=\"danger\" mensaje=\"Error al agregar el producto\"/>: \"\"}\r\n                                    </div>\r\n                                </div><br />\r\n                                <form className=\"row g-2\" onSubmit={this.contactSubmit.bind(this)}>\r\n                                    <div class=\"col-sm-6 position-relative\">\r\n                                        <label for=\"regProductNombre\" class=\"form-label\">Nombre</label>\r\n                                        <div className=\"input-group justify-content-center\">\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend\">\r\n                                                <img src={iconUser} className=\"Login-content-form-icon\" alt=\"icono user\" />\r\n                                            </span>\r\n                                            <input type=\"text\" onChange={this.handleChange.bind(this, \"regProductNombre\")} value={this.state.fields[\"regProductNombre\"]} className=\"form-control\" id=\"regProductNombre\" name=\"regProductNombre\" aria-describedby=\"inputGroupPrepend\" placeholder=\"Escriba el nombre del producto\" required />\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"regProductNombre\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-4 position-relative\">\r\n                                        <label for=\"regProductPrecio\" className=\"form-label\">Precio</label>\r\n                                        <div className=\"input-group has-validation  justify-content-center\">\r\n                                            <span className=\"input-group-text\" id=\"inputGroupPrepend\">\r\n                                                $\r\n                                            </span>\r\n                                            <input type=\"number\" onChange={this.handleChange.bind(this, \"regProductPrecio\")} value={this.state.fields[\"regProductPrecio\"]} className=\"form-control\" id=\"regProductPrecio\" name=\"regProductPrecio\" aria-describedby=\"inputGroupPrepend\" placeholder=\"Escriba el precio del producto\" required />\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"regProductPrecio\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-2 position-relative\">\r\n                                        <label for=\"regProductCantidad\" className=\"form-label\">Cantidad</label>\r\n                                        <div className=\"input-group has-validation  justify-content-center\">\r\n                                           <input type=\"number\" onChange={this.handleChange.bind(this, \"regProductCantidad\")} value={this.state.fields[\"regProductCantidad\"]} className=\"form-control\" id=\"regProductCantidad\" name=\"regProductCantidad\" aria-describedby=\"inputGroupPrepend\" placeholder=\"\" required />\r\n                                        </div>\r\n                                        <div>\r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"regProductCantidad\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-sm-12 position-relative\">\r\n                                        <label for=\"regProductDesc\" className=\"form-label\">Descripción</label>\r\n                                        <textarea className=\"form-control\" onChange={this.handleChange.bind(this, \"regProductDesc\")} value={this.state.fields[\"regProductDesc\"]} id=\"validationTextarea\" name=\"regProductDesc\" placeholder=\"Agregue una descripcion del producto\" required></textarea>\r\n                                        <div>\r\n                                            <span style={{ color: \"red\" }}>{this.state.errors[\"regProductDesc\"]}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        <div className=\"d-grid gap-1 d-sm-flex justify-content-center\">\r\n                                            <button type=\"submit\" className=\"btn btn-success\">\r\n                                                <img src={iconIng} className=\"Login-content-form-btn-icon\" id=\"iconIng\" alt=\"icono boton guardar\" />\r\n                                                Guardar\r\n                                            </button>\r\n                                            <button type=\"submit\" className=\"btn btn-danger\">\r\n                                                <img src={iconRec} className=\"Login-content-form-btn-icon\" id=\"iconRec\" alt=\"icono boton cancelar\" />\r\n                                                Cancelar\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <section>\r\n                            <div class=\"card mt-3\">\r\n                                <div class=\"card-header\" >\r\n                                    <ul class=\"nav nav-tabs card-header-tabs\">\r\n\r\n                                        <h3 >Lista De Productos</h3>\r\n\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n\r\n                                    <div class=\"container\">\r\n\r\n                                        <table class=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">#</th>\r\n                                                    <th scope=\"col\">Nombre Producto</th>\r\n                                                    <th scope=\"col\">Cantidad</th>\r\n                                                    <th scope=\"col\">Precio</th>\r\n                                                    <th scope=\"col\">Actualizar</th>\r\n                                                    <th scope=\"col\">Eliminar</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                            <AdminLista_Products prod={products} />\r\n                                              \r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default insertProducto;","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\shared\\home.js",["87"],"import './home.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from \"react\";\r\nimport Header from '../components/Header';\r\nimport Lista_Productos from \"../producto/componente/lista-productos\";\r\nfunction home() {\r\n  \r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n          <Header />\r\n      </div>\r\n\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"p-3 col col-sm-7\">\r\n          <Lista_Productos/>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col col-sm-8\">\r\n          <h4>Footer</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Login.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\Productos.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\AgregarVentas.js",["88","89","90"],"import './ListaVentas.css';\r\nimport React from \"react\";\r\nimport Header from '../../components/Header';\r\nimport ListaVentas from './ListaVentas'\r\n\r\nconst listventas = [{\r\n    \"id\": 1,\r\n    \"nombreComprador\": \"Diego\",\r\n    \"ndocument\": 1061789456,\r\n    \"producto\": \"Camisas\",\r\n    \"cantidad\": 4,\r\n    \"total\": 60000,\r\n    \"nombreVendedor\": \"Cristian\"\r\n}, {\r\n    \"id\": 2,\r\n    \"nombreComprador\": \"Diego\",\r\n    \"ndocument\": 1061789456,\r\n    \"producto\": \"Pantalones\",\r\n    \"cantidad\": 2,\r\n    \"total\": 30000,\r\n    \"nombreVendedor\": \"Manuel\"\r\n}]\r\n\r\nclass AgregarVenta extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            datos: [{\r\n                \"id\": 1,\r\n                \"nombreP\": \"Pantalones\",\r\n                \"cantidad\": 3,\r\n                \"precio\": 15000,\r\n                \"image\": \"https://m.media-amazon.com/images/I/61qMt8YrVtL._AC_UY445_.jpg\"\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"nombreP\": \"Camisas\",\r\n                \"cantidad\": 2,\r\n                \"precio\": 10000,\r\n                \"image\": \"https://contents.mediadecathlon.com/p1786958/k$2b0a8a97ea3b1154f2f3734009451fe2/pantalon-de-montana-y-trekking-viaje-de-hombre-forclaz-travel-100-gris.jpg?&f=452x452\"\r\n            }],\r\n            vendedores: [{\r\n                \"id\": 1,\r\n                \"nombreVendedor\": \"Manuel\"\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"nombreVendedor\": \"Cristian\"\r\n            }\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Cliente\r\n        if (!fields[\"regClientNombre\"]) {\r\n            formIsValid = false;\r\n            errors[\"regClientNombre\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regClientNombre\"] !== \"undefined\") {\r\n            if (!fields[\"regClientNombre\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regClientNombre\"] = \"Solo letras\";\r\n            }\r\n        }\r\n\r\n        //Numero de documento\r\n        if (!fields[\"Numdoc\"]) {\r\n            formIsValid = false;\r\n            errors[\"Numdoc\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"Numdoc\"] !== \"undefined\") {\r\n            if (!fields[\"Numdoc\"].match(/^[0-9]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"Numdoc\"] = \"Solo números\";\r\n            }\r\n        }\r\n        //Productos\r\n        if (!fields[\"regProduct\"]) {\r\n            formIsValid = false;\r\n            errors[\"regProduct\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regProduct\"] !== \"undefined\") {\r\n            if (!fields[\"regProduct\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regProduct\"] = \"Solo letras\";\r\n            }\r\n        }\r\n\r\n        //Cantidad\r\n        if (!fields[\"regCantidad\"]) {\r\n            formIsValid = false;\r\n            errors[\"regCantidad\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regCantidad\"] !== \"undefined\") {\r\n            if (!fields[\"regCantidad\"].match(/^[0-9]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regCantidad\"] = \"Solo números\";\r\n            }\r\n        }\r\n        //Total\r\n        if (!fields[\"regTotal\"]) {\r\n            formIsValid = false;\r\n            errors[\"regTotal\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regTotal\"] !== \"undefined\") {\r\n            if (!fields[\"regTotal\"].match(/^[0-9]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regTotal\"] = \"Solo números\";\r\n            }\r\n        }\r\n        //Vendedor\r\n        if (!fields[\"regVendedor\"]) {\r\n            formIsValid = false;\r\n            errors[\"regVendedor\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regVendedor\"] !== \"undefined\") {\r\n            if (!fields[\"regVendedor\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regVendedor\"] = \"Solo letras\";\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n        // const products = [];\r\n\r\n        if (this.handleValidation()) {\r\n            listventas.push(\r\n                {\r\n                    nombreComprador: e[\"target\"][0].value,\r\n                    ndocument: e[\"target\"][1].value,\r\n                    producto: e[\"target\"][2].value,\r\n                    cantidad: e[\"target\"][3].value,\r\n                    total: e[\"target\"][4].value,\r\n                    nombreVendedor: e[\"target\"][5].value\r\n\r\n\r\n                })\r\n\r\n            //this.setState=({listventas:products});\r\n\r\n        } else {\r\n            alert(\"Error al agregar.\");\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"GestVend\">\r\n                <div>\r\n                    <Header />\r\n                </div>\r\n                <header className=\"text-center\" >\r\n                    <body>\r\n                        <h3>Registrar Venta</h3>\r\n                        <form class=\"card text-center mb-2\" onSubmit={this.contactSubmit.bind(this)} >\r\n                            <div class=\"row m-2\">\r\n                                <div class=\"col\">\r\n                                    <label for=\"inputZip\" class=\"form-label\">Nombre de cliente</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"regClientNombre\" onChange={this.handleChange.bind(this, \"regClientNombre\")} value={this.state.fields[\"regClientNombre\"]} required ></input>\r\n\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"inputZip\" class=\"form-label\">Numero de documento</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"Numdoc\" onChange={this.handleChange.bind(this, \"Numdoc\")} value={this.state.fields[\"Numdoc\"]} required></input>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"inputState\" class=\"form-label\">Producto</label>\r\n                                    <select id=\"inputState\" class=\"form-select\" id=\"regProduct\" onChange={this.handleChange.bind(this, \"regProduct\")} value={this.state.fields[\"regProduct\"]} required >\r\n\r\n                                        {this.state.datos.map((prod) => {\r\n                                            return (\r\n                                                <option >{prod.nombreP}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row m-2\">\r\n                                <div class=\"col\">\r\n\r\n                                    <label for=\"inputZip\" class=\"form-label\">Cantidad</label>\r\n                                    <input type=\"number\" class=\"form-control\" id=\"regCantidad\" onChange={this.handleChange.bind(this, \"regCantidad\")} value={this.state.fields[\"regCantidad\"]} required></input>\r\n\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"inputZip\" class=\"form-label\">Total</label>\r\n                                    <input type=\"text\" class=\"form-control\" id=\"\" id=\"regTotal\" onChange={this.handleChange.bind(this, \"regTotal\")} value={this.state.fields[\"regTotal\"]} required></input>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"inputState\" class=\"form-label\">Vendedor</label>\r\n                                    <select id=\"inputState\" class=\"form-select\" id=\"regVendedor\" onChange={this.handleChange.bind(this, \"regVendedor\")} value={this.state.fields[\"regVendedor\"]} required>\r\n\r\n                                        {this.state.vendedores.map((vendedor) => {\r\n                                            return (\r\n                                                <option>{vendedor.nombreVendedor}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div class=\"card-header\">\r\n                                <ul class=\"nav nav-tabs card-header-tabs\">\r\n\r\n                                    <button type=\"submit\" class=\"btn btn-primary mb-2\">Guardar</button>\r\n\r\n\r\n                                </ul>\r\n                            </div>\r\n\r\n\r\n                        </form>\r\n\r\n                        <section>\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\" >\r\n                                    <ul class=\"nav nav-tabs card-header-tabs\">\r\n\r\n                                        <h3 >Lista De Ventas</h3>\r\n\r\n\r\n                                    </ul>\r\n                                </div>\r\n                                <div class=\"card-body\">\r\n\r\n                                    <div class=\"container\">\r\n\r\n                                        <table class=\"table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">#</th>\r\n                                                    <th scope=\"col\">Comprador</th>\r\n                                                    <th scope=\"col\">Nombre Producto</th>\r\n                                                    <th scope=\"col\">Cantidad</th>\r\n                                                    <th scope=\"col\">Vendedor</th>\r\n                                                    <th scope=\"col\">Total</th>\r\n                                                    <th scope=\"col\">Actualizar</th>\r\n                                                    <th scope=\"col\">Eliminar</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n\r\n                                             <ListaVentas venta={listventas} />\r\n\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n\r\n                        <script src=\"./gestor.js\"></script>\r\n                        <footer> &copy; Todos los derechos reservados.</footer>\r\n\r\n                    </body>\r\n\r\n\r\n                </header>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AgregarVenta;\r\n","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\UpdateVentas.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\Usuarios\\component\\AgregarUsuarios.js",["91","92"],"\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from '../../components/Header';\r\nimport ListaUsuarios from '../../Usuarios/component/ListaUsuarios';\r\n\r\n\r\nclass AgregarUsuario extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            fields: {},\r\n            errors: {},\r\n            \r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //Nombre\r\n        if (!fields[\"regNombreUser\"]) {\r\n            formIsValid = false;\r\n            errors[\"regNombreUser\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regNombreUser\"] !== \"undefined\") {\r\n            if (!fields[\"regNombreUser\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regNombreUser\"] = \"Solo letras\";\r\n            }\r\n        }\r\n        \r\n\r\n        //rol\r\n        if (!fields[\"regRol\"]) {\r\n            formIsValid = false;\r\n            errors[\"regRol\"] = \"Campo obligatorio\";\r\n        }\r\n\r\n        if (typeof fields[\"regRol\"] !== \"undefined\") {\r\n            if (!fields[\"regRol\"].match(/^[a-zA-Z ]+$/)) {\r\n                formIsValid = false;\r\n                errors[\"regRol\"] = \"Solo letras\";\r\n            }\r\n        }\r\n\r\n       \r\n\r\n\r\n        this.setState({ errors: errors });\r\n        return formIsValid;\r\n    }\r\n\r\n\r\n    contactSubmit(e) {\r\n        e.preventDefault();\r\n        const products = [];\r\n\r\n        if (this.handleValidation()) {\r\n            products.push(\r\n                {\r\n                    nombre: e[\"target\"][0].value,\r\n                    rol: e[\"target\"][1].value\r\n                }\r\n\r\n            );\r\n            products.map((produ)=>{\r\n                alert(\"Usuario agregado correctamente!! \\n \\n\"\r\n                +\"Usuario: \"+produ.nombre+\"\\n\"\r\n                +\"Rol: \"+produ.rol)\r\n               \r\n            })\r\n            \r\n        } else {\r\n            alert(\"Error al agregar.\");\r\n        }\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n    render() {\r\n        const Usuarios = [{\r\n            \"id\": 1,\r\n            \"nombreVendedor\": \"Manuel\",\r\n            \"rol\":\"administrador\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"nombreVendedor\": \"Cristian\",\r\n            \"rol\":\"vendedor\"\r\n        }\r\n        ]\r\n        return (\r\n            <div className=\"GestVend\">\r\n                <div>\r\n                    <Header />\r\n                </div>\r\n                <header className=\"text-center\" >\r\n                    <h3>Gestion De Vendedores</h3>\r\n                    <body>\r\n                        <form onSubmit={this.contactSubmit.bind(this)} class=\"m-4\">\r\n                            \r\n                            <div class=\"row m-2\">\r\n                                <div class=\"col\">\r\n                                <label for=\"\" class=\"form-label\">Nombre Comprador</label>\r\n                                    <input type=\"text\" class=\"form-control\" onChange={this.handleChange.bind(this, \"regNombreUser\")} value={this.state.fields[\"regNombreUser\"]} placeholder=\"Escriba el usuario\" required></input>\r\n                                    \r\n                                </div>\r\n                                <div class=\"col\">\r\n                                <label for=\"inputZip\" class=\"form-label\" >Rol</label>\r\n                                    <input type=\"text\" class=\"form-control\"onChange={this.handleChange.bind(this, \"regRol\")} value={this.state.fields[\"regRol\"]} placeholder=\"Escriba el rol\" required ></input>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                            <div>\r\n                            </div>\r\n                            <div className=\"text-left \" >\r\n                                <button type=\"submit\" class=\"btn btn-primary mt-2\" >Guardar</button>\r\n                            </div>\r\n                        </form>\r\n\r\n\r\n\r\n\r\n                        <div class=\"card\">\r\n                            <div class=\"card-header\" >\r\n                                <ul class=\"nav nav-tabs card-header-tabs\">\r\n\r\n                                    <h3 >Lista De Vendedores</h3>\r\n\r\n\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"card-body\">\r\n\r\n                                <div class=\"container\">\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\">#</th>\r\n                                                <th scope=\"col\">Rol</th>\r\n                                                <th scope=\"col\">Usuario</th>\r\n                                                <th scope=\"col\">Actualizar</th>\r\n                                                <th scope=\"col\">Eliminar</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n\r\n                                            {Usuarios.map((usuarios) =>\r\n                                                (<ListaUsuarios usuarios={usuarios} />))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <footer> &copy; Todos los derechos reservados.</footer>\r\n\r\n                    </body>\r\n\r\n\r\n                </header>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AgregarUsuario;\r\n","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\AdminLista_ Products.js",["93"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst AdminLista_Products = ({ prod }) => {\r\n    const  [ value , setValue ]  = useState ( 1 ) ;\r\n\r\n    const EliminarItem = idSeleccionado => {\r\n        const newList = prod.filter((item) => item.id !== idSeleccionado)\r\n        prod.splice(0, prod.length);\r\n        newList.map((newPro)=>{\r\n            prod.push({\r\n                id: newPro.id,\r\n                nombreP: newPro.nombreP,\r\n                cantidad: newPro.cantidad,\r\n                precio: newPro.precio,\r\n            })\r\n        })\r\n        setValue ( ( value +  1 ) )\r\n        console.log(\"ELIMINADO\", idSeleccionado,newList)\r\n    }\r\n    return (\r\n        prod.map((proda) => {\r\n            return (\r\n                <tr>\r\n                    <th scope=\"row\">#</th>\r\n                    <td>{proda.nombreP}</td>\r\n                    <td>{proda.cantidad}</td>\r\n                    <td>{proda.precio}</td>\r\n                    <td><Link to=\"/updateVd\" id={proda.id}><button type=\"button\" class=\"btn btn-warning\">Editar</button></Link></td>\r\n                    <td><button class=\"btn btn-danger\" onClick={() => EliminarItem(proda.id)}>Eliminar</button></td>\r\n                </tr>)\r\n        })\r\n    )\r\n}\r\nexport default AdminLista_Products\r\n","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Header.js",["94","95"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './header.css'; \r\n\r\nimport LogoImproTic from '../img/logo-improTic.png';\r\nimport User from '../img/icon-user.svg';\r\n\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        console.log(this.props.products)\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col col-sm-9\">\r\n                        <div class=\"row justify-content-between\">\r\n                            <div className=\"col-3\">\r\n                                <div className=\"p-1 align-content-start\">\r\n                                    <img src={LogoImproTic} className=\"img-fluid\"></img>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <div className=\"p-3 align-content-end\">\r\n                                    <img src={User} className=\"img-fluid\"></img>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-md-center\"> \r\n                    <div class=\"col-md-9\">\r\n                        <ul class=\"nav nav-tabs\">\r\n                            <li class=\"nav-item\">\r\n                                <Link to=\"/\" class=\"nav-link active\">Inicio</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link to=\"/pag\" class=\"nav-link\">Gestion de Ventas</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link to=\"/gusuarios\" class=\"nav-link\">Gestion de Usuarios</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link to=\"/insertProducto\" class=\"nav-link\">Gestion de productos</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link to=\"/login\" class=\"nav-link\">Login</Link>\r\n                            </li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\ventas\\components\\ListaVentas.js",["96"],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\Usuarios\\component\\ListaUsuarios.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\producto\\componente\\UpdateProd.js",[],"C:\\Users\\User\\Documents\\GitHub\\Proyecto-MinTic\\src\\components\\Alert.js",["97","98","99","100","101","102"],"import React, { useState } from \"react\";\r\n\r\nconst Alerta=({tipo, mensaje}) =>{\r\n    \r\n    const [show, setShow] = useState(true);\r\n    if(show){\r\n        if(tipo == \"success\"){\r\n            return (\r\n            <div>\r\n                <div className=\"alert alert-success\">\r\n                    <div className=\"alert-heading row\">\r\n                        <div className=\"col-sm-10 text-align-center\">\r\n                            <span>Mensaje</span>\r\n                        </div>\r\n                        <div className=\"col-sm-2 position-end\">\r\n                            <button onClick={() => setShow(false)} className=\"btn btn-primary\" className=\"btn-close\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <p>{mensaje}</p>\r\n                </div>\r\n            </div>\r\n            );\r\n        }else if(tipo == \"danger\"){\r\n            return (\r\n            <div>\r\n                <div className=\"alert alert-danger\">\r\n                    <div className=\"alert-heading row\">\r\n                        <div className=\"col-sm-10 text-align-center\">\r\n                            <span>Mensaje</span>\r\n                        </div>\r\n                        <div className=\"col-sm-2 position-end\">\r\n                            <button onClick={() => setShow(false)} className=\"btn btn-primary\" className=\"btn-close\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <p>{mensaje}</p>\r\n                </div>\r\n            </div>\r\n            );\r\n        }else if(tipo == \"info\"){\r\n            return (\r\n            <div>\r\n                <div className=\"alert alert-info\">\r\n                    <div className=\"alert-heading row\">\r\n                        <div className=\"col-sm-10 text-align-center\">\r\n                            <span>Mensaje</span>\r\n                        </div>\r\n                        <div className=\"col-sm-2 position-end\">\r\n                            <button onClick={() => setShow(false)} className=\"btn btn-primary\" className=\"btn-close\"></button>\r\n                        </div>\r\n                    </div>\r\n                    <p>{mensaje}</p>\r\n                </div>\r\n            </div>\r\n            );\r\n        }\r\n    }else{\r\n        return(\r\n            null\r\n        );\r\n    }\r\n  }\r\n  \r\n  export default Alerta;",{"ruleId":"103","severity":1,"message":"104","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":23},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":146,"column":60,"nodeType":"115","messageId":"116","endLine":146,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":147,"column":60,"nodeType":"115","messageId":"116","endLine":147,"endColumn":62},{"ruleId":"117","severity":1,"message":"118","line":236,"column":45,"nodeType":"119","messageId":"120","endLine":236,"endColumn":84},{"ruleId":"117","severity":1,"message":"121","line":17,"column":11,"nodeType":"119","messageId":"120","endLine":17,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":199,"column":81,"nodeType":"124","messageId":"125","endLine":199,"endColumn":96},{"ruleId":"122","severity":1,"message":"123","line":218,"column":83,"nodeType":"124","messageId":"125","endLine":218,"endColumn":96},{"ruleId":"122","severity":1,"message":"123","line":222,"column":81,"nodeType":"124","messageId":"125","endLine":222,"endColumn":97},{"ruleId":"103","severity":1,"message":"126","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":72,"column":33,"nodeType":"129","messageId":"130","endLine":72,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":11,"column":29,"nodeType":"129","messageId":"130","endLine":11,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":19,"column":37,"nodeType":"119","endLine":19,"endColumn":83},{"ruleId":"131","severity":1,"message":"132","line":24,"column":37,"nodeType":"119","endLine":24,"endColumn":75},{"ruleId":"127","severity":1,"message":"128","line":8,"column":30,"nodeType":"129","messageId":"130","endLine":8,"endColumn":32},{"ruleId":"113","severity":1,"message":"114","line":7,"column":17,"nodeType":"115","messageId":"116","endLine":7,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":16,"column":96,"nodeType":"124","messageId":"125","endLine":16,"endColumn":117},{"ruleId":"113","severity":1,"message":"114","line":23,"column":23,"nodeType":"115","messageId":"116","endLine":23,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":32,"column":96,"nodeType":"124","messageId":"125","endLine":32,"endColumn":117},{"ruleId":"113","severity":1,"message":"114","line":39,"column":23,"nodeType":"115","messageId":"116","endLine":39,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":48,"column":96,"nodeType":"124","messageId":"125","endLine":48,"endColumn":117},"no-unused-vars","'Lista_Productos' is defined but never used.","Identifier","unusedVar","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'iconPass' is defined but never used.","'List' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component AdminLista_Products must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Lista_Productos must be in PascalCase or SCREAMING_SNAKE_CASE","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]